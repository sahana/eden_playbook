---

- name: Copying 000_config.py for Production
  command: cp /home/{{ type }}/applications/eden/private/templates/000_config.py /home/{{ type }}/applications/eden/models
  when: type == 'prod' or dtype == 'beforeprod'

- name: Copying 000_config.py
  command: cp /home/web2py/applications/eden/models/000_config.py /home/{{ type }}/applications/eden/models
  when: type == 'test' or dtype == 'afterprod'
  tags:
    - test
    - demo

- name: Configure DB
  lineinfile: dest=/home/{{ type }}/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^#settings.database.db_type = \"postgres\"', line: 'settings.database.db_type = \"postgres\"' }
    - { regexp: '^#settings.database.host = \"localhost\"', line: 'settings.database.host = \"{{ db_ip }}\"' }
    - { regexp: '^#settings.database.password = \"password\"', line: 'settings.database.password = \"{{ password }}\"' }
    - { regexp: '^#settings.gis.spatialdb = True', line: 'settings.gis.spatialdb = True' }
    - { regexp: '^settings.base.migrate = False', line: 'settings.base.migrate = True' }
  when: db_type == 'postgresql'
  tags:
    - test
    - demo

- name: Configure DB
  lineinfile: dest=/home/web2py/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^#settings.database.db_type = \"mysql\"', line: 'settings.database.db_type = \"mysql\"' }
    - { regexp: '^#settings.database.host = \"localhost\"', line: 'settings.database.db_type = \"{{ db_ip }}\"' }
    - { regexp: '^#settings.database.password = \"password\"', line: 'settings.database.password = \"{{ password }}\"' }
    - { regexp: '^settings.base.migrate = False', line: 'settings.base.migrate = True' }
  when: db_type == 'mysql'
  tags:
    - test
    - demo

- name: Configure DB
  lineinfile: dest=/home/{{ type }}/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^#settings.database.database = \"sahana\"', line: 'settings.database.database = \"sahana-{{ type }}\"' }
  when: type != 'prod'
  tags:
    - test
    - demo

- name: Updating hosts file
  lineinfile: dest=/etc/hosts
              regexp="^localhost.localdomain localhost"
              insertafter="^localhost.localdomain localhost"
              line="{{ sitename }} {{ hostname }} localhost.localdomain localhost"
              state=present

- name: Updating hostname file
  template: src=hostname dest=/etc/hostname

- name: Updating mailname file
  template: src=mailname dest=/etc/mailname

- name: Configure for Internet Mail Delivery
  command: dpkg-reconfigure -f noninteractive exim4-config

- name: Editing 000_config.py
  lineinfile: dest=/home/{{ type }}/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^settings.base.template = \"default\"', line: 'settings.base.template = \"{{ template }}\"' }
    - { regexp: '^#settings.base.prepopulate = \[\"demo\"\]', line: 'settings.base.prepopulate = (\"{{ prepop_options }}\")' }
    - { regexp: '^FINISHED_EDITING_CONFIG_FILE = False', line: 'FINISHED_EDITING_CONFIG_FILE = True' }
    - { regexp: 'akeytochange', line: 'settings.auth.hmac_key = \"{{ sitename }}{{ password }}\"' }
    - { regexp: '^#settings.base.public_url = \"http://127.0.0.1:8000\"', line: 'settings.base.public_url = \"{{ sitename }}\"' }
    - { regexp: '^#settings.base.cdn = True', line: 'settings.base.cdn = True' }
  tags:
    - test
    - demo

# clean tasks

- name: Run update_clean
  command: python web2py.py -S eden -M -R /tmp/update_clean.py chdir=/home/web2py
  when: type == 'test'
  tags:
    - test

- name: Run clean script
  command: "{{ item }}"
  with_items:
      - clean test
      - clean_eden test
  when: type == 'test'
  tags:
    - test

# other management scripts

- name: Copying management scripts
  copy: "src={{ item.src }} dest={{ item.dest }} mode=755"
  with_items:
    - { src: 'compile', dest: '/usr/local/bin/compile' }
    - { src: 'pull', dest: '/usr/local/bin/pull' }
    - { src: 'revert', dest: '/usr/local/bin/revert' }
    - { src: 'w2p', dest: '/usr/local/bin/w2p' }
  tags:
    - test
    - demo

- name: Run web2py
  command: sudo -H -u web2py python web2py.py -S eden -M -R applications/eden/static/scripts/tools/noop.py chdir=/home/{{ type }}
  tags:
    - demo

- name: Configuring for Production
  lineinfile: dest=/home/{{ type }}/applications/eden/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  with_items:
    - { regexp: '^#settings.base.prepopulate = 0', line: 'settings.base.prepopulate = 0' }
    - { regexp: '^settings.base.migrate = True', line: 'settings.base.migrate = False' }

- name: Run web2py
  command: sudo -H -u web2py python web2py.py -S eden -M -R applications/eden/static/scripts/tools/compile.py chdir=/home/{{ type }}
  tags:
    - demo

- name: Update crontab
  copy: src=cron dest=/etc/crontab

- name: Start services
  service: name={{ item.name }} state={{ item.state }}
  with_items:
    - { name: 'uwsgi-{{ type }}', state: 'started' }
  when: web_server == "cherokee"
  tags:
    - test
    - demo

- name: Stop Rocket Server
  service: name=web2py  state=stopped
  when: inventory_hostname == '127.0.0.1'

- name: Remove port 80 redirection rule
  shell: iptables -t nat -D PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8000
  when: inventory_hostname == '127.0.0.1'

# Todo: Move this to apache role
- name: Enable production VirtualHost
  command: a2ensite production
  when: web_server == "apache"

- name: Restart apache
  command: apache2ctl restart
  when: web_server == "apache"
